const CACHE_NAME="MrZeFrICDNCache";let cachelist=[];self.addEventListener("install",(async function(e){self.skipWaiting(),e.waitUntil(caches.open(CACHE_NAME).then((function(e){return console.log("success-open-cache"),e.addAll(cachelist)})))})),self.addEventListener("fetch",(async e=>{try{e.respondWith(handle(e.request))}catch(t){e.respondWith(handleerr(e.request,t))}}));const handleerr=async(e,t)=>new Response(`<h1>CDN分流器遇到了错误</h1>\n    <b>${t}</b>`,{headers:{"content-type":"text/html; charset=utf-8"}});let cdn={gh:{jsdelivr:{url:"https://cdn.jsdelivr.net/gh"},jsdelivr_fastly:{url:"https://fastly.jsdelivr.net/gh"},jsdelivr_gcore:{url:"https://gcore.jsdelivr.net/gh"},pigax_jsd:{url:"https://u.pigax.cn/gh"},sourcegcdn_jsd:{url:"https://gh.sourcegcdn.com"}},combine:{jsdelivr:{url:"https://cdn.jsdelivr.net/combine"},jsdelivr_fastly:{url:"https://fastly.jsdelivr.net/combine"},jsdelivr_gcore:{url:"https://gcore.jsdelivr.net/combine"},pigax_jsd:{url:"https://u.pigax.cn/combine"}},npm:{eleme:{url:"https://npm.elemecdn.com"},jsdelivr:{url:"https://cdn.jsdelivr.net/npm"},zhimg:{url:"https://unpkg.zhimg.com"},unpkg:{url:"https://unpkg.com"},bdstatic:{url:"https://code.bdstatic.com/npm"},pigax_jsd:{url:"https://u.pigax.cn/npm"},pigax_unpkg:{url:"https://unpkg.pigax.cn/"},sourcegcdn_npm:{url:"https://npm.sourcegcdn.com/"},staticfile_npm:{url:"https://cdn.staticfile.org/"}}};const handle=async function(e){const t=e.url,n=t.split("/")[2];let r=[];for(let s in cdn)for(let c in cdn[s])if(n==cdn[s][c].url.split("https://")[1].split("/")[0]&&t.match(cdn[s][c].url)){r=[];for(let e in cdn[s])r.push(t.replace(cdn[s][c].url,cdn[s][e].url));return t.indexOf("@latest/")>-1?lfetch(r,t):caches.match(e).then((function(n){return n||lfetch(r,t).then((function(t){return caches.open(CACHE_NAME).then((function(n){return n.put(e,t.clone()),t}))}))}))}return fetch(e)},lfetch=async(e,t)=>{let n=new AbortController;const r=async e=>new Response(await e.arrayBuffer(),{status:e.status,headers:e.headers});return Promise.any||(Promise.any=function(e){return new Promise(((t,n)=>{let r=(e=Array.isArray(e)?e:[]).length,s=[];if(0===r)return n(new AggregateError("All promises were rejected"));e.forEach((e=>{e.then((e=>{t(e)}),(e=>{r--,s.push(e),0===r&&n(new AggregateError(s))}))}))}))}),Promise.any(e.map((e=>new Promise(((t,s)=>{fetch(e,{signal:n.signal}).then(r).then((e=>{200==e.status?(n.abort(),t(e)):s(e)}))})))))};